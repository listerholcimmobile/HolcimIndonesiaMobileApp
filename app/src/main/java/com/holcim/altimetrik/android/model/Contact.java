package com.holcim.altimetrik.android.model;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import java.io.File;

import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;

import com.altimetrik.holcim.data.managment.HolcimDataSource;
import com.holcim.altimetrik.android.exception.HolcimError;
import com.holcim.altimetrik.android.exception.HolcimException;
import com.holcim.altimetrik.android.utilities.AltimetrikException;
import com.holcim.altimetrik.android.utilities.AltimetrikFileHandler;
import com.holcim.altimetrik.android.utilities.HolcimConsts;
// KEEP INCLUDES END
/**
 * Entity mapped to table CONTACT.
 */
public class Contact {

    private Long id;
    private String salesforceId;
    private String firstName;
    private String lastName;
    private String gender;
    private String birthDate;
    private String phone;
    private String mobile;
    private String extension;
    private String fax;
    private String email;
    private String mailingStreet;
    private String mailingCity;
    private String mailingStateProvince;
    private String mailingPostalCode;
    private String mailingCountry;
    private String nationality;
    private String accountId;
    private String accountName;
    private String picturemd5;
    private String retailerID;
    private Boolean isEdited;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Contact() {
    }

    public Contact(Long id) {
        this.id = id;
    }

    public Contact(Long id, String salesforceId, String firstName, String lastName, String gender, String birthDate, String phone, String mobile, String extension, String fax, String email, String mailingStreet, String mailingCity, String mailingStateProvince, String mailingPostalCode, String mailingCountry, String nationality, String accountId, String accountName, String picturemd5, String retailerID,Boolean isEdited) {
        this.id = id;
        this.salesforceId = salesforceId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.gender = gender;
        this.birthDate = birthDate;
        this.phone = phone;
        this.mobile = mobile;
        this.extension = extension;
        this.fax = fax;
        this.email = email;
        this.mailingStreet = mailingStreet;
        this.mailingCity = mailingCity;
        this.mailingStateProvince = mailingStateProvince;
        this.mailingPostalCode = mailingPostalCode;
        this.mailingCountry = mailingCountry;
        this.nationality = nationality;
        this.accountId = accountId;
        this.accountName = accountName;
        this.picturemd5 = picturemd5;
        this.retailerID = retailerID;
        this.isEdited = isEdited;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getSalesforceId() {
        return salesforceId;
    }

    public void setSalesforceId(String salesforceId) {
        this.salesforceId = salesforceId;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getBirthDate() {
        return birthDate;
    }

    public void setBirthDate(String birthDate) {
        this.birthDate = birthDate;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public String getMobile() {
        return mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    public String getExtension() {
        return extension;
    }

    public void setExtension(String extension) {
        this.extension = extension;
    }

    public String getFax() {
        return fax;
    }

    public void setFax(String fax) {
        this.fax = fax;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getMailingStreet() {
        return mailingStreet;
    }

    public void setMailingStreet(String mailingStreet) {
        this.mailingStreet = mailingStreet;
    }

    public String getMailingCity() {
        return mailingCity;
    }

    public void setMailingCity(String mailingCity) {
        this.mailingCity = mailingCity;
    }

    public String getMailingStateProvince() {
        return mailingStateProvince;
    }

    public void setMailingStateProvince(String mailingStateProvince) {
        this.mailingStateProvince = mailingStateProvince;
    }

    public String getMailingPostalCode() {
        return mailingPostalCode;
    }

    public void setMailingPostalCode(String mailingPostalCode) {
        this.mailingPostalCode = mailingPostalCode;
    }

    public String getMailingCountry() {
        return mailingCountry;
    }

    public void setMailingCountry(String mailingCountry) {
        this.mailingCountry = mailingCountry;
    }

    public String getNationality() {
        return nationality;
    }

    public void setNationality(String nationality) {
        this.nationality = nationality;
    }

    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    public String getAccountName() {
        return accountName;
    }

    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    public String getPicturemd5() {
        return picturemd5;
    }

    public void setPicturemd5(String picturemd5) {
        this.picturemd5 = picturemd5;
    }

    public String getRetailerID() {
        return retailerID;
    }

    public void setRetailerID(String retailerID) {
        this.retailerID = retailerID;
    }

    public Boolean getIsEdited() {
        return isEdited;
    }

    public void setIsEdited(Boolean isEdited) {
        this.isEdited = isEdited;
    }


    // KEEP METHODS - put your custom methods here
	public String getImageFileName() {
		return this.getId().toString() + "_" + HolcimConsts.CONTACT_FILENAME + ".jpg";
	}

	public String toJson() throws HolcimException {

		try {
			JSONObject jsonObj = new JSONObject();
			jsonObj.putOpt("salesforceId", this.salesforceId);
			jsonObj.putOpt("birthDate", this.birthDate);
			jsonObj.putOpt("email", this.email);
			jsonObj.putOpt("extension", this.extension);
			jsonObj.putOpt("fax", this.fax);
			jsonObj.putOpt("firstName", this.firstName);
			jsonObj.putOpt("gender", this.gender);
			jsonObj.putOpt("lastName", this.lastName);
			jsonObj.putOpt("mailingCity", this.mailingCity);
			jsonObj.putOpt("mailingCountry", this.mailingCountry);
			jsonObj.putOpt("mailingPostalCode", this.mailingPostalCode);
			jsonObj.putOpt("mailingStateProvince", this.mailingStateProvince);
			jsonObj.putOpt("mailingStreet", this.mailingStreet);
			jsonObj.putOpt("mobile", this.mobile);
			jsonObj.putOpt("nationality", this.nationality);
			jsonObj.putOpt("phone", this.phone);
			jsonObj.putOpt("accountId", this.accountId);
			jsonObj.putOpt("accountName", this.accountName);
			jsonObj.putOpt("picturemd5", this.picturemd5);

			return jsonObj.toString();
		} catch (JSONException e) {
			throw new HolcimException(HolcimException.PARSE_EXCEPTION, HolcimConsts.ERROR_PARSING_JSON_STATUS, e.getMessage());
		}
	}
	
	public String getPictureFileName() {
		return this.getId().toString() + "_" + HolcimConsts.CONTACT_SF_OBJECT_NAME + ".jpg";
	}
	
	public String getTempPictureFileName(Context context) {
		return HolcimConsts.CONTACT_TEMPORAL_FILE_NAME;
	}
	
	public String getPicturePath(Context context) throws HolcimException {
		try {
			return HolcimDataSource.GetContactImagePath(context, this);
		} catch (HolcimException e) {
			throw e;
		}
	}
	
	public boolean needDownloadPicture(Context context) throws HolcimException {
		try {
			if (this.getPicturemd5() != null && !this.getPicturemd5().equals("")) {
				if (!isPictureFileExist(context) || !checkPicturMD5(context)) {
					return true;
				}
			}
			return false;
		} catch (Exception e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION, new HolcimError(HolcimConsts.FILE_ERROR_STATUS, e.getMessage()));
		}
	}
	
	public boolean isPictureFileExist(Context context) throws HolcimException {
		try {
			return AltimetrikFileHandler.isFileExist(getPicturePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}
	
	public boolean checkPicturMD5(Context context) throws HolcimException {		
		try {
			AltimetrikFileHandler fileHandler = new AltimetrikFileHandler(context);
			return fileHandler.GetChecksum(getPicturePath(context)).equals(this.getPicturemd5());
		} catch (AltimetrikException e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION, new HolcimError(HolcimConsts.FILE_ERROR_STATUS, e.getMessage()));
		} catch (HolcimException e) {
			throw e;
		}
	}
	
	public boolean needUploadContactPicture(Context context) throws HolcimException {
		try {
			if ((this.getSalesforceId() == null || this.getSalesforceId().equals("")) && isPictureFileExist(context)) {
				return true;
			} else if (isPictureFileExist(context) && !checkPicturMD5(context)) {
				return true;
			}
			return false;
		} catch (HolcimException e) {
			throw e;
		}
	}

	
	public String getImagePath(Context context, String field) throws HolcimException {
		try {
			if (field.equals(HolcimConsts.CONTACT_SF_IMAGE_FIELD_NAME)) {
				return getPicturePath(context);
			}
			return getPicturePath(context);
		} catch (HolcimException e) {
			throw e;
		}
	}
	
	public String getTempPictureFilePath(Context context) throws HolcimException {
		try {
			return HolcimDataSource.getTempMediaDir(context) + File.separator + HolcimConsts.CONTACT_TEMPORAL_FILE_NAME;
		} catch (HolcimException e) {
			throw e;
		}
	}
	
	public boolean isPictureTempFileExist(Context context) throws HolcimException {
		try {
			return AltimetrikFileHandler.isFileExist(getTempPictureFilePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}
    // KEEP METHODS END

}
