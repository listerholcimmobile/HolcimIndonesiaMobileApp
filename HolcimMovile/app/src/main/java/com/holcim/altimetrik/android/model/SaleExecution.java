package com.holcim.altimetrik.android.model;

import java.util.List;
import com.holcim.altimetrik.android.model.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import android.content.Context;
import java.io.File;
import java.io.Serializable;

import com.altimetrik.holcim.data.managment.HolcimDataSource;
import com.holcim.altimetrik.android.application.HolcimApp;
import org.json.JSONObject;

import com.holcim.altimetrik.android.utilities.AltimetrikException;
import com.holcim.altimetrik.android.utilities.AltimetrikFileHandler;
import com.holcim.altimetrik.android.utilities.HolcimConsts;
import org.json.JSONException;

import com.holcim.altimetrik.android.exception.HolcimError;
import com.holcim.altimetrik.android.exception.HolcimException;

import java.util.ArrayList;

// KEEP INCLUDES END
/**
 * Entity mapped to table SALE_EXECUTION.
 */
public class SaleExecution implements Serializable {

	private Long id;
	private String salesforceId;
	/** Not-null value. */
	private String visitDate;
	private String inspectionDate;
	private String availabilityOfHILShopSign;
	private String accountRecordType;
	private String visibilityOfHILShopSign;
	private String conditionOfShopSign;
	private String colorCondition;
	private String shopSign;
	private String priority;
	private String visibilityOfCompetitorShopSign;
	private String typeOfShopSign;
	private String physicalCondition;
	private String cleanessCondition;
	private String action;
	private String actionStatus;
	private String academicTitle;
	private String actualVisitDate;
	private String bankAccountBranch1;
	private String bankAccountBranch2;
	private String bankAccountBranch3;
	private String bankAccountName1;
	private String bankAccountName2;
	private String bankAccountName3;
	private String bankAccountNumber1;
	private String bankAccountNumber2;
	private String bankAccountNumber3;
	private Boolean badDebt;
	private String birthDate;
	private String businessEntityStatus;
	private String buyCompetitorName;
	private String buyingVolumeCompetitorName;
	private String callNote;
	private Double capacityCurrentMonth;
	private String comments;
	private String companyName;
	private Boolean completed;
	private String contactId;
	private String contactMobile1;
	private String contactMobile2;
	private String contactEmail1;
	private String contactName;
	private String contactStatus;
	private String accountName;
	private String accountType;
	private String customerClass;
	private String deliveryRemark;
	private String district;
	private String eightTTruckArmada;
	private String email1;
	private String event;
	private String extension1;
	private String ExperienceWithLeadCompetitor;
	private String favouriteActivities;
	private String favouriteDrink;
	private String favouriteFood;
	private String favouriteSports;
	private String fax1;
	private String firstName;
	private String gender;
	private String hilBuyingPriceDate;
	private Double hilBuyingPrice;
	private String hilBuyingVolumeDate;
	private Double hilBuyingVolume;
	private String hilBuyingInventoryPriceDate;
	private Double hilBuyingInventoryPrice;
	private String hilBuyingSellingPriceDate;
	private Double hilBuyingSellingPrice;
	private Double hilSoWCurrentMonth;
	private Double hmhilBuyingPrice;
	private Double hmhilInventory;
	private Double hmhilSellingPrice;
	private Boolean hvlStockStatus;
	private Double hvlStockVolumeTonMonth;
	private String hobbies;
	private Double holcimeterBalance;
	private Double holcimeterBonus;
	private Double holcimeterTotal;
	private String invCompetitorName;
	private Boolean isDSR;
	private Boolean isFinished;
	private Boolean jelajahHolcimMembership;
	private String JelajahHolcimID;
	private String jobTitle;
	private String kecamatan;
	private String kelurahan;
	private String kota;
	private Boolean keyRetailer;
	private String landStatus;
	private String landmarkDescription;
	private String lastActualVisitDate;
	private String landmarkPicture;
	private Double lastBuyingPrice;
	private String lastBuyingPriceDate;
	private Double lastBuyingVolume;
	private String lastBuyingVolumeDate;
	private String lastDispatchDate;
	private Double lastHILBuyingVolume;
	private Double lastInventory;
	private String lastInventoryDate;
	private String lastName;
	private String lastPlannedVisitDate;
	private String lastRewardRedeemed;
	private Double lastSellingPrice;
	private String lastSellingPriceDate;
	private String latitude;
	private String longitude;
	private String mailingAddress;
	private String maritalStatus;
	private String mobile1;
	private String mobile2;
	private String nationalId;
	private String nationality;
	private String nextPlannedVisitDate;
	private String notFavouriteDrink;
	private String notFavouriteFood;
	private String Note;
	private String Number;
	private Double numberOfPermanentEmployees;
	private String orderDate;
	private Double orderVolume;
	private String ownerContactNumber;
	private String supplierName;
	private String phone1;
	private String phone2;
	private String pickUp2TArmada;
	private String picture;
	private String postalCode;
	private String preferredName;
	private String preferredContactMethod;
	private String province;
	private String program;
	private String programStartDate;
	private String programEndDate;
	private String promotion;
	private String promotionStartDate;
	private String promotionEndDate;
	private String reasonForNotAchievingTarget;
	private String religion;
	private Double retailerCreditLimit;
	private String retailerId;
	private String retailerName;
	private String retailerStatus;
	private String retailerTermOfPayment;
	private String ReasonForBuyingFromLeadCompetitor;
	private String ReasonForUnsatisfiedExperience;
	private String ssCompetitorName;
	private String ssPictureDate;
	private String ssPictureDescription;
	private String ssPicture;
	private Double salesActualMTD;
	private String salesCallNote;
	private String salesOfficerId;
	private String salesOfficer;
	private Double salesTargetCurrentMonth;
	private Double salesTargetMTD;
	private String salesmanInChargeId;
	private String salesmanInCharge;
	private Boolean sendAlert;
	private String shopSignRemark;
	private String signBoard;
	private Integer startingYear;
	private String status;
	private String streetAddress;
	private Boolean submitted;
	private String tierKLABHistory;
	private String tierKLAB;
	private String title;
	private String twentyFourTTruckArmada;
	private Double x1stDesiredRewardPoints;
	private String x1stDesiredReward;
	private Double x2ndDesiredRewardPoints;
	private String x2ndDesiredReward;
	private Double x3rdDesiredRewardPoints;
	private String x3rdDesiredReward;
	private Boolean isProspect;
	private String landmarkPictureMD5;
	private String pictureMD5;
	private String ssPictureMD5;
	private String reasonForCancelling;
	private String unplannedVisitReason;
	private String checkInDateTime;
	private Boolean isEdited;
	private long prospectId;
	private long accountId;

	/** Used to resolve relations */
	private transient DaoSession daoSession;

	/** Used for active entity operations. */
	private transient SaleExecutionDao myDao;

	private Prospect prospect;
	private Long prospect__resolvedKey;

	private Account account;
	private Long account__resolvedKey;

	private List<PreOrder> preOrders;
	private List<ActionsLog> actionLogs;
	private List<CompetitorMarketing> competitorMarketings;

	// KEEP FIELDS - put your custom fields here
	/**
	 * 
	 */
	private static final long serialVersionUID = -1581965061219825949L;

	// KEEP FIELDS END

	public SaleExecution() {
	}

	public SaleExecution(Long id) {
		this.id = id;
	}

	public SaleExecution(Long id, String salesforceId, String visitDate,
			String inspectionDate, String availabilityOfHILShopSign,
			String accountRecordType, String visibilityOfHILShopSign,
			String conditionOfShopSign, String colorCondition, String shopSign,
			String priority, String visibilityOfCompetitorShopSign,
			String typeOfShopSign, String physicalCondition,
			String cleanessCondition, String action, String actionStatus,
			String academicTitle, String actualVisitDate,
			String bankAccountBranch1, String bankAccountBranch2,
			String bankAccountBranch3, String bankAccountName1,
			String bankAccountName2, String bankAccountName3,
			String bankAccountNumber1, String bankAccountNumber2,
			String bankAccountNumber3, Boolean badDebt, String birthDate,
			String businessEntityStatus, String buyCompetitorName,
			String buyingVolumeCompetitorName, String callNote,
			Double capacityCurrentMonth, String comments, String companyName,
			Boolean completed, String contactId, String contactMobile1,
			String contactMobile2, String contactEmail1, String contactName,
			String contactStatus, String accountName, String accountType,
			String customerClass, String deliveryRemark, String district,
			String eightTTruckArmada, String email1, String event,
			String extension1, String ExperienceWithLeadCompetitor,
			String favouriteActivities, String favouriteDrink,
			String favouriteFood, String favouriteSports, String fax1,
			String firstName, String gender, String hilBuyingPriceDate,
			Double hilBuyingPrice, String hilBuyingVolumeDate,
			Double hilBuyingVolume, String hilBuyingInventoryPriceDate,
			Double hilBuyingInventoryPrice, String hilBuyingSellingPriceDate,
			Double hilBuyingSellingPrice, Double hilSoWCurrentMonth,
			Double hmhilBuyingPrice, Double hmhilInventory,
			Double hmhilSellingPrice, Boolean hvlStockStatus,
			Double hvlStockVolumeTonMonth, String hobbies,
			Double holcimeterBalance, Double holcimeterBonus,
			Double holcimeterTotal, String invCompetitorName, Boolean isDSR,
			Boolean isFinished, Boolean jelajahHolcimMembership,
			String JelajahHolcimID, String jobTitle, String kecamatan,
			String kelurahan, String kota, Boolean keyRetailer,
			String landStatus, String landmarkDescription,
			String lastActualVisitDate, String landmarkPicture,
			Double lastBuyingPrice, String lastBuyingPriceDate,
			Double lastBuyingVolume, String lastBuyingVolumeDate,
			String lastDispatchDate, Double lastHILBuyingVolume,
			Double lastInventory, String lastInventoryDate, String lastName,
			String lastPlannedVisitDate, String lastRewardRedeemed,
			Double lastSellingPrice, String lastSellingPriceDate,
			String latitude, String longitude, String mailingAddress,
			String maritalStatus, String mobile1, String mobile2,
			String nationalId, String nationality, String nextPlannedVisitDate,
			String notFavouriteDrink, String notFavouriteFood, String Note,
			String Number, Double numberOfPermanentEmployees, String orderDate,
			Double orderVolume, String ownerContactNumber, String supplierName,
			String phone1, String phone2, String pickUp2TArmada,
			String picture, String postalCode, String preferredName,
			String preferredContactMethod, String province, String program,
			String programStartDate, String programEndDate, String promotion,
			String promotionStartDate, String promotionEndDate,
			String reasonForNotAchievingTarget, String religion,
			Double retailerCreditLimit, String retailerId, String retailerName,
			String retailerStatus, String retailerTermOfPayment,
			String ReasonForBuyingFromLeadCompetitor,
			String ReasonForUnsatisfiedExperience, String ssCompetitorName,
			String ssPictureDate, String ssPictureDescription,
			String ssPicture, Double salesActualMTD, String salesCallNote,
			String salesOfficerId, String salesOfficer,
			Double salesTargetCurrentMonth, Double salesTargetMTD,
			String salesmanInChargeId, String salesmanInCharge,
			Boolean sendAlert, String shopSignRemark, String signBoard,
			Integer startingYear, String status, String streetAddress,
			Boolean submitted, String tierKLABHistory, String tierKLAB,
			String title, String twentyFourTTruckArmada,
			Double x1stDesiredRewardPoints, String x1stDesiredReward,
			Double x2ndDesiredRewardPoints, String x2ndDesiredReward,
			Double x3rdDesiredRewardPoints, String x3rdDesiredReward,
			Boolean isProspect, String landmarkPictureMD5, String pictureMD5,
			String ssPictureMD5, String reasonForCancelling,
			String unplannedVisitReason, String checkInDateTime,
			Boolean isEdited, long prospectId, long accountId) {
		this.id = id;
		this.salesforceId = salesforceId;
		this.visitDate = visitDate;
		this.inspectionDate = inspectionDate;
		this.availabilityOfHILShopSign = availabilityOfHILShopSign;
		this.accountRecordType = accountRecordType;
		this.visibilityOfHILShopSign = visibilityOfHILShopSign;
		this.conditionOfShopSign = conditionOfShopSign;
		this.colorCondition = colorCondition;
		this.shopSign = shopSign;
		this.priority = priority;
		this.visibilityOfCompetitorShopSign = visibilityOfCompetitorShopSign;
		this.typeOfShopSign = typeOfShopSign;
		this.physicalCondition = physicalCondition;
		this.cleanessCondition = cleanessCondition;
		this.action = action;
		this.actionStatus = actionStatus;
		this.academicTitle = academicTitle;
		this.actualVisitDate = actualVisitDate;
		this.bankAccountBranch1 = bankAccountBranch1;
		this.bankAccountBranch2 = bankAccountBranch2;
		this.bankAccountBranch3 = bankAccountBranch3;
		this.bankAccountName1 = bankAccountName1;
		this.bankAccountName2 = bankAccountName2;
		this.bankAccountName3 = bankAccountName3;
		this.bankAccountNumber1 = bankAccountNumber1;
		this.bankAccountNumber2 = bankAccountNumber2;
		this.bankAccountNumber3 = bankAccountNumber3;
		this.badDebt = badDebt;
		this.birthDate = birthDate;
		this.businessEntityStatus = businessEntityStatus;
		this.buyCompetitorName = buyCompetitorName;
		this.buyingVolumeCompetitorName = buyingVolumeCompetitorName;
		this.callNote = callNote;
		this.capacityCurrentMonth = capacityCurrentMonth;
		this.comments = comments;
		this.companyName = companyName;
		this.completed = completed;
		this.contactId = contactId;
		this.contactMobile1 = contactMobile1;
		this.contactMobile2 = contactMobile2;
		this.contactEmail1 = contactEmail1;
		this.contactName = contactName;
		this.contactStatus = contactStatus;
		this.accountName = accountName;
		this.accountType = accountType;
		this.customerClass = customerClass;
		this.deliveryRemark = deliveryRemark;
		this.district = district;
		this.eightTTruckArmada = eightTTruckArmada;
		this.email1 = email1;
		this.event = event;
		this.extension1 = extension1;
		this.ExperienceWithLeadCompetitor = ExperienceWithLeadCompetitor;
		this.favouriteActivities = favouriteActivities;
		this.favouriteDrink = favouriteDrink;
		this.favouriteFood = favouriteFood;
		this.favouriteSports = favouriteSports;
		this.fax1 = fax1;
		this.firstName = firstName;
		this.gender = gender;
		this.hilBuyingPriceDate = hilBuyingPriceDate;
		this.hilBuyingPrice = hilBuyingPrice;
		this.hilBuyingVolumeDate = hilBuyingVolumeDate;
		this.hilBuyingVolume = hilBuyingVolume;
		this.hilBuyingInventoryPriceDate = hilBuyingInventoryPriceDate;
		this.hilBuyingInventoryPrice = hilBuyingInventoryPrice;
		this.hilBuyingSellingPriceDate = hilBuyingSellingPriceDate;
		this.hilBuyingSellingPrice = hilBuyingSellingPrice;
		this.hilSoWCurrentMonth = hilSoWCurrentMonth;
		this.hmhilBuyingPrice = hmhilBuyingPrice;
		this.hmhilInventory = hmhilInventory;
		this.hmhilSellingPrice = hmhilSellingPrice;
		this.hvlStockStatus = hvlStockStatus;
		this.hvlStockVolumeTonMonth = hvlStockVolumeTonMonth;
		this.hobbies = hobbies;
		this.holcimeterBalance = holcimeterBalance;
		this.holcimeterBonus = holcimeterBonus;
		this.holcimeterTotal = holcimeterTotal;
		this.invCompetitorName = invCompetitorName;
		this.isDSR = isDSR;
		this.isFinished = isFinished;
		this.jelajahHolcimMembership = jelajahHolcimMembership;
		this.JelajahHolcimID = JelajahHolcimID;
		this.jobTitle = jobTitle;
		this.kecamatan = kecamatan;
		this.kelurahan = kelurahan;
		this.kota = kota;
		this.keyRetailer = keyRetailer;
		this.landStatus = landStatus;
		this.landmarkDescription = landmarkDescription;
		this.lastActualVisitDate = lastActualVisitDate;
		this.landmarkPicture = landmarkPicture;
		this.lastBuyingPrice = lastBuyingPrice;
		this.lastBuyingPriceDate = lastBuyingPriceDate;
		this.lastBuyingVolume = lastBuyingVolume;
		this.lastBuyingVolumeDate = lastBuyingVolumeDate;
		this.lastDispatchDate = lastDispatchDate;
		this.lastHILBuyingVolume = lastHILBuyingVolume;
		this.lastInventory = lastInventory;
		this.lastInventoryDate = lastInventoryDate;
		this.lastName = lastName;
		this.lastPlannedVisitDate = lastPlannedVisitDate;
		this.lastRewardRedeemed = lastRewardRedeemed;
		this.lastSellingPrice = lastSellingPrice;
		this.lastSellingPriceDate = lastSellingPriceDate;
		this.latitude = latitude;
		this.longitude = longitude;
		this.mailingAddress = mailingAddress;
		this.maritalStatus = maritalStatus;
		this.mobile1 = mobile1;
		this.mobile2 = mobile2;
		this.nationalId = nationalId;
		this.nationality = nationality;
		this.nextPlannedVisitDate = nextPlannedVisitDate;
		this.notFavouriteDrink = notFavouriteDrink;
		this.notFavouriteFood = notFavouriteFood;
		this.Note = Note;
		this.Number = Number;
		this.numberOfPermanentEmployees = numberOfPermanentEmployees;
		this.orderDate = orderDate;
		this.orderVolume = orderVolume;
		this.ownerContactNumber = ownerContactNumber;
		this.supplierName = supplierName;
		this.phone1 = phone1;
		this.phone2 = phone2;
		this.pickUp2TArmada = pickUp2TArmada;
		this.picture = picture;
		this.postalCode = postalCode;
		this.preferredName = preferredName;
		this.preferredContactMethod = preferredContactMethod;
		this.province = province;
		this.program = program;
		this.programStartDate = programStartDate;
		this.programEndDate = programEndDate;
		this.promotion = promotion;
		this.promotionStartDate = promotionStartDate;
		this.promotionEndDate = promotionEndDate;
		this.reasonForNotAchievingTarget = reasonForNotAchievingTarget;
		this.religion = religion;
		this.retailerCreditLimit = retailerCreditLimit;
		this.retailerId = retailerId;
		this.retailerName = retailerName;
		this.retailerStatus = retailerStatus;
		this.retailerTermOfPayment = retailerTermOfPayment;
		this.ReasonForBuyingFromLeadCompetitor = ReasonForBuyingFromLeadCompetitor;
		this.ReasonForUnsatisfiedExperience = ReasonForUnsatisfiedExperience;
		this.ssCompetitorName = ssCompetitorName;
		this.ssPictureDate = ssPictureDate;
		this.ssPictureDescription = ssPictureDescription;
		this.ssPicture = ssPicture;
		this.salesActualMTD = salesActualMTD;
		this.salesCallNote = salesCallNote;
		this.salesOfficerId = salesOfficerId;
		this.salesOfficer = salesOfficer;
		this.salesTargetCurrentMonth = salesTargetCurrentMonth;
		this.salesTargetMTD = salesTargetMTD;
		this.salesmanInChargeId = salesmanInChargeId;
		this.salesmanInCharge = salesmanInCharge;
		this.sendAlert = sendAlert;
		this.shopSignRemark = shopSignRemark;
		this.signBoard = signBoard;
		this.startingYear = startingYear;
		this.status = status;
		this.streetAddress = streetAddress;
		this.submitted = submitted;
		this.tierKLABHistory = tierKLABHistory;
		this.tierKLAB = tierKLAB;
		this.title = title;
		this.twentyFourTTruckArmada = twentyFourTTruckArmada;
		this.x1stDesiredRewardPoints = x1stDesiredRewardPoints;
		this.x1stDesiredReward = x1stDesiredReward;
		this.x2ndDesiredRewardPoints = x2ndDesiredRewardPoints;
		this.x2ndDesiredReward = x2ndDesiredReward;
		this.x3rdDesiredRewardPoints = x3rdDesiredRewardPoints;
		this.x3rdDesiredReward = x3rdDesiredReward;
		this.isProspect = isProspect;
		this.landmarkPictureMD5 = landmarkPictureMD5;
		this.pictureMD5 = pictureMD5;
		this.ssPictureMD5 = ssPictureMD5;
		this.reasonForCancelling = reasonForCancelling;
		this.unplannedVisitReason = unplannedVisitReason;
		this.checkInDateTime = checkInDateTime;
		this.isEdited = isEdited;
		this.prospectId = prospectId;
		this.accountId = accountId;
	}

	/** called by internal mechanisms, do not call yourself. */
	public void __setDaoSession(DaoSession daoSession) {
		this.daoSession = daoSession;
		myDao = daoSession != null ? daoSession.getSaleExecutionDao() : null;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getSalesforceId() {
		return salesforceId;
	}

	public void setSalesforceId(String salesforceId) {
		this.salesforceId = salesforceId;
	}

	/** Not-null value. */
	public String getVisitDate() {
		return visitDate;
	}

	/**
	 * Not-null value; ensure this value is available before it is saved to the
	 * database.
	 */
	public void setVisitDate(String visitDate) {
		this.visitDate = visitDate;
	}

	public String getInspectionDate() {
		return inspectionDate;
	}

	public void setInspectionDate(String inspectionDate) {
		this.inspectionDate = inspectionDate;
	}

	public String getAvailabilityOfHILShopSign() {
		return availabilityOfHILShopSign;
	}

	public void setAvailabilityOfHILShopSign(String availabilityOfHILShopSign) {
		this.availabilityOfHILShopSign = availabilityOfHILShopSign;
	}

	public String getAccountRecordType() {
		return accountRecordType;
	}

	public void setAccountRecordType(String accountRecordType) {
		this.accountRecordType = accountRecordType;
	}

	public String getVisibilityOfHILShopSign() {
		return visibilityOfHILShopSign;
	}

	public void setVisibilityOfHILShopSign(String visibilityOfHILShopSign) {
		this.visibilityOfHILShopSign = visibilityOfHILShopSign;
	}

	public String getConditionOfShopSign() {
		return conditionOfShopSign;
	}

	public void setConditionOfShopSign(String conditionOfShopSign) {
		this.conditionOfShopSign = conditionOfShopSign;
	}

	public String getColorCondition() {
		return colorCondition;
	}

	public void setColorCondition(String colorCondition) {
		this.colorCondition = colorCondition;
	}

	public String getShopSign() {
		return shopSign;
	}

	public void setShopSign(String shopSign) {
		this.shopSign = shopSign;
	}

	public String getPriority() {
		return priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}

	public String getVisibilityOfCompetitorShopSign() {
		return visibilityOfCompetitorShopSign;
	}

	public void setVisibilityOfCompetitorShopSign(
			String visibilityOfCompetitorShopSign) {
		this.visibilityOfCompetitorShopSign = visibilityOfCompetitorShopSign;
	}

	public String getTypeOfShopSign() {
		return typeOfShopSign;
	}

	public void setTypeOfShopSign(String typeOfShopSign) {
		this.typeOfShopSign = typeOfShopSign;
	}

	public String getPhysicalCondition() {
		return physicalCondition;
	}

	public void setPhysicalCondition(String physicalCondition) {
		this.physicalCondition = physicalCondition;
	}

	public String getCleanessCondition() {
		return cleanessCondition;
	}

	public void setCleanessCondition(String cleanessCondition) {
		this.cleanessCondition = cleanessCondition;
	}

	public String getAction() {
		return action;
	}

	public void setAction(String action) {
		this.action = action;
	}

	public String getActionStatus() {
		return actionStatus;
	}

	public void setActionStatus(String actionStatus) {
		this.actionStatus = actionStatus;
	}

	public String getAcademicTitle() {
		return academicTitle;
	}

	public void setAcademicTitle(String academicTitle) {
		this.academicTitle = academicTitle;
	}

	public String getActualVisitDate() {
		return actualVisitDate;
	}

	public void setActualVisitDate(String actualVisitDate) {
		this.actualVisitDate = actualVisitDate;
	}

	public String getBankAccountBranch1() {
		return bankAccountBranch1;
	}

	public void setBankAccountBranch1(String bankAccountBranch1) {
		this.bankAccountBranch1 = bankAccountBranch1;
	}

	public String getBankAccountBranch2() {
		return bankAccountBranch2;
	}

	public void setBankAccountBranch2(String bankAccountBranch2) {
		this.bankAccountBranch2 = bankAccountBranch2;
	}

	public String getBankAccountBranch3() {
		return bankAccountBranch3;
	}

	public void setBankAccountBranch3(String bankAccountBranch3) {
		this.bankAccountBranch3 = bankAccountBranch3;
	}

	public String getBankAccountName1() {
		return bankAccountName1;
	}

	public void setBankAccountName1(String bankAccountName1) {
		this.bankAccountName1 = bankAccountName1;
	}

	public String getBankAccountName2() {
		return bankAccountName2;
	}

	public void setBankAccountName2(String bankAccountName2) {
		this.bankAccountName2 = bankAccountName2;
	}

	public String getBankAccountName3() {
		return bankAccountName3;
	}

	public void setBankAccountName3(String bankAccountName3) {
		this.bankAccountName3 = bankAccountName3;
	}

	public String getBankAccountNumber1() {
		return bankAccountNumber1;
	}

	public void setBankAccountNumber1(String bankAccountNumber1) {
		this.bankAccountNumber1 = bankAccountNumber1;
	}

	public String getBankAccountNumber2() {
		return bankAccountNumber2;
	}

	public void setBankAccountNumber2(String bankAccountNumber2) {
		this.bankAccountNumber2 = bankAccountNumber2;
	}

	public String getBankAccountNumber3() {
		return bankAccountNumber3;
	}

	public void setBankAccountNumber3(String bankAccountNumber3) {
		this.bankAccountNumber3 = bankAccountNumber3;
	}

	public Boolean getBadDebt() {
		return badDebt;
	}

	public void setBadDebt(Boolean badDebt) {
		this.badDebt = badDebt;
	}

	public String getBirthDate() {
		return birthDate;
	}

	public void setBirthDate(String birthDate) {
		this.birthDate = birthDate;
	}

	public String getBusinessEntityStatus() {
		return businessEntityStatus;
	}

	public void setBusinessEntityStatus(String businessEntityStatus) {
		this.businessEntityStatus = businessEntityStatus;
	}

	public String getBuyCompetitorName() {
		return buyCompetitorName;
	}

	public void setBuyCompetitorName(String buyCompetitorName) {
		this.buyCompetitorName = buyCompetitorName;
	}

	public String getBuyingVolumeCompetitorName() {
		return buyingVolumeCompetitorName;
	}

	public void setBuyingVolumeCompetitorName(String buyingVolumeCompetitorName) {
		this.buyingVolumeCompetitorName = buyingVolumeCompetitorName;
	}

	public String getCallNote() {
		return callNote;
	}

	public void setCallNote(String callNote) {
		this.callNote = callNote;
	}

	public Double getCapacityCurrentMonth() {
		return capacityCurrentMonth;
	}

	public void setCapacityCurrentMonth(Double capacityCurrentMonth) {
		this.capacityCurrentMonth = capacityCurrentMonth;
	}

	public String getComments() {
		return comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	public String getCompanyName() {
		return companyName;
	}

	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	public Boolean getCompleted() {
		return completed;
	}

	public void setCompleted(Boolean completed) {
		this.completed = completed;
	}

	public String getContactId() {
		return contactId;
	}

	public void setContactId(String contactId) {
		this.contactId = contactId;
	}

	public String getContactMobile1() {
		return contactMobile1;
	}

	public void setContactMobile1(String contactMobile1) {
		this.contactMobile1 = contactMobile1;
	}

	public String getContactMobile2() {
		return contactMobile2;
	}

	public void setContactMobile2(String contactMobile2) {
		this.contactMobile2 = contactMobile2;
	}

	public String getContactEmail1() {
		return contactEmail1;
	}

	public void setContactEmail1(String contactEmail1) {
		this.contactEmail1 = contactEmail1;
	}

	public String getContactName() {
		return contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	public String getContactStatus() {
		return contactStatus;
	}

	public void setContactStatus(String contactStatus) {
		this.contactStatus = contactStatus;
	}

	public String getAccountName() {
		return accountName;
	}

	public void setAccountName(String accountName) {
		this.accountName = accountName;
	}

	public String getAccountType() {
		return accountType;
	}

	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}

	public String getCustomerClass() {
		return customerClass;
	}

	public void setCustomerClass(String customerClass) {
		this.customerClass = customerClass;
	}

	public String getDeliveryRemark() {
		return deliveryRemark;
	}

	public void setDeliveryRemark(String deliveryRemark) {
		this.deliveryRemark = deliveryRemark;
	}

	public String getDistrict() {
		return district;
	}

	public void setDistrict(String district) {
		this.district = district;
	}

	public String getEightTTruckArmada() {
		return eightTTruckArmada;
	}

	public void setEightTTruckArmada(String eightTTruckArmada) {
		this.eightTTruckArmada = eightTTruckArmada;
	}

	public String getEmail1() {
		return email1;
	}

	public void setEmail1(String email1) {
		this.email1 = email1;
	}

	public String getEvent() {
		return event;
	}

	public void setEvent(String event) {
		this.event = event;
	}

	public String getExtension1() {
		return extension1;
	}

	public void setExtension1(String extension1) {
		this.extension1 = extension1;
	}

	public String getExperienceWithLeadCompetitor() {
		return ExperienceWithLeadCompetitor;
	}

	public void setExperienceWithLeadCompetitor(
			String ExperienceWithLeadCompetitor) {
		this.ExperienceWithLeadCompetitor = ExperienceWithLeadCompetitor;
	}

	public String getFavouriteActivities() {
		return favouriteActivities;
	}

	public void setFavouriteActivities(String favouriteActivities) {
		this.favouriteActivities = favouriteActivities;
	}

	public String getFavouriteDrink() {
		return favouriteDrink;
	}

	public void setFavouriteDrink(String favouriteDrink) {
		this.favouriteDrink = favouriteDrink;
	}

	public String getFavouriteFood() {
		return favouriteFood;
	}

	public void setFavouriteFood(String favouriteFood) {
		this.favouriteFood = favouriteFood;
	}

	public String getFavouriteSports() {
		return favouriteSports;
	}

	public void setFavouriteSports(String favouriteSports) {
		this.favouriteSports = favouriteSports;
	}

	public String getFax1() {
		return fax1;
	}

	public void setFax1(String fax1) {
		this.fax1 = fax1;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public String getHilBuyingPriceDate() {
		return hilBuyingPriceDate;
	}

	public void setHilBuyingPriceDate(String hilBuyingPriceDate) {
		this.hilBuyingPriceDate = hilBuyingPriceDate;
	}

	public Double getHilBuyingPrice() {
		return hilBuyingPrice;
	}

	public void setHilBuyingPrice(Double hilBuyingPrice) {
		this.hilBuyingPrice = hilBuyingPrice;
	}

	public String getHilBuyingVolumeDate() {
		return hilBuyingVolumeDate;
	}

	public void setHilBuyingVolumeDate(String hilBuyingVolumeDate) {
		this.hilBuyingVolumeDate = hilBuyingVolumeDate;
	}

	public Double getHilBuyingVolume() {
		return hilBuyingVolume;
	}

	public void setHilBuyingVolume(Double hilBuyingVolume) {
		this.hilBuyingVolume = hilBuyingVolume;
	}

	public String getHilBuyingInventoryPriceDate() {
		return hilBuyingInventoryPriceDate;
	}

	public void setHilBuyingInventoryPriceDate(
			String hilBuyingInventoryPriceDate) {
		this.hilBuyingInventoryPriceDate = hilBuyingInventoryPriceDate;
	}

	public Double getHilBuyingInventoryPrice() {
		return hilBuyingInventoryPrice;
	}

	public void setHilBuyingInventoryPrice(Double hilBuyingInventoryPrice) {
		this.hilBuyingInventoryPrice = hilBuyingInventoryPrice;
	}

	public String getHilBuyingSellingPriceDate() {
		return hilBuyingSellingPriceDate;
	}

	public void setHilBuyingSellingPriceDate(String hilBuyingSellingPriceDate) {
		this.hilBuyingSellingPriceDate = hilBuyingSellingPriceDate;
	}

	public Double getHilBuyingSellingPrice() {
		return hilBuyingSellingPrice;
	}

	public void setHilBuyingSellingPrice(Double hilBuyingSellingPrice) {
		this.hilBuyingSellingPrice = hilBuyingSellingPrice;
	}

	public Double getHilSoWCurrentMonth() {
		return hilSoWCurrentMonth;
	}

	public void setHilSoWCurrentMonth(Double hilSoWCurrentMonth) {
		this.hilSoWCurrentMonth = hilSoWCurrentMonth;
	}

	public Double getHmhilBuyingPrice() {
		return hmhilBuyingPrice;
	}

	public void setHmhilBuyingPrice(Double hmhilBuyingPrice) {
		this.hmhilBuyingPrice = hmhilBuyingPrice;
	}

	public Double getHmhilInventory() {
		return hmhilInventory;
	}

	public void setHmhilInventory(Double hmhilInventory) {
		this.hmhilInventory = hmhilInventory;
	}

	public Double getHmhilSellingPrice() {
		return hmhilSellingPrice;
	}

	public void setHmhilSellingPrice(Double hmhilSellingPrice) {
		this.hmhilSellingPrice = hmhilSellingPrice;
	}

	public Boolean getHvlStockStatus() {
		return hvlStockStatus;
	}

	public void setHvlStockStatus(Boolean hvlStockStatus) {
		this.hvlStockStatus = hvlStockStatus;
	}

	public Double getHvlStockVolumeTonMonth() {
		return hvlStockVolumeTonMonth;
	}

	public void setHvlStockVolumeTonMonth(Double hvlStockVolumeTonMonth) {
		this.hvlStockVolumeTonMonth = hvlStockVolumeTonMonth;
	}

	public String getHobbies() {
		return hobbies;
	}

	public void setHobbies(String hobbies) {
		this.hobbies = hobbies;
	}

	public Double getHolcimeterBalance() {
		return holcimeterBalance;
	}

	public void setHolcimeterBalance(Double holcimeterBalance) {
		this.holcimeterBalance = holcimeterBalance;
	}

	public Double getHolcimeterBonus() {
		return holcimeterBonus;
	}

	public void setHolcimeterBonus(Double holcimeterBonus) {
		this.holcimeterBonus = holcimeterBonus;
	}

	public Double getHolcimeterTotal() {
		return holcimeterTotal;
	}

	public void setHolcimeterTotal(Double holcimeterTotal) {
		this.holcimeterTotal = holcimeterTotal;
	}

	public String getInvCompetitorName() {
		return invCompetitorName;
	}

	public void setInvCompetitorName(String invCompetitorName) {
		this.invCompetitorName = invCompetitorName;
	}

	public Boolean getIsDSR() {
		return isDSR;
	}

	public void setIsDSR(Boolean isDSR) {
		this.isDSR = isDSR;
	}

	public Boolean getIsFinished() {
		return isFinished;
	}

	public void setIsFinished(Boolean isFinished) {
		this.isFinished = isFinished;
	}

	public Boolean getJelajahHolcimMembership() {
		return jelajahHolcimMembership;
	}

	public void setJelajahHolcimMembership(Boolean jelajahHolcimMembership) {
		this.jelajahHolcimMembership = jelajahHolcimMembership;
	}

	public String getJelajahHolcimID() {
		return JelajahHolcimID;
	}

	public void setJelajahHolcimID(String JelajahHolcimID) {
		this.JelajahHolcimID = JelajahHolcimID;
	}

	public String getJobTitle() {
		return jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	public String getKecamatan() {
		return kecamatan;
	}

	public void setKecamatan(String kecamatan) {
		this.kecamatan = kecamatan;
	}

	public String getKelurahan() {
		return kelurahan;
	}

	public void setKelurahan(String kelurahan) {
		this.kelurahan = kelurahan;
	}

	public String getKota() {
		return kota;
	}

	public void setKota(String kota) {
		this.kota = kota;
	}

	public Boolean getKeyRetailer() {
		return keyRetailer;
	}

	public void setKeyRetailer(Boolean keyRetailer) {
		this.keyRetailer = keyRetailer;
	}

	public String getLandStatus() {
		return landStatus;
	}

	public void setLandStatus(String landStatus) {
		this.landStatus = landStatus;
	}

	public String getLandmarkDescription() {
		return landmarkDescription;
	}

	public void setLandmarkDescription(String landmarkDescription) {
		this.landmarkDescription = landmarkDescription;
	}

	public String getLastActualVisitDate() {
		return lastActualVisitDate;
	}

	public void setLastActualVisitDate(String lastActualVisitDate) {
		this.lastActualVisitDate = lastActualVisitDate;
	}

	public String getLandmarkPicture() {
		return landmarkPicture;
	}

	public void setLandmarkPicture(String landmarkPicture) {
		this.landmarkPicture = landmarkPicture;
	}

	public Double getLastBuyingPrice() {
		return lastBuyingPrice;
	}

	public void setLastBuyingPrice(Double lastBuyingPrice) {
		this.lastBuyingPrice = lastBuyingPrice;
	}

	public String getLastBuyingPriceDate() {
		return lastBuyingPriceDate;
	}

	public void setLastBuyingPriceDate(String lastBuyingPriceDate) {
		this.lastBuyingPriceDate = lastBuyingPriceDate;
	}

	public Double getLastBuyingVolume() {
		return lastBuyingVolume;
	}

	public void setLastBuyingVolume(Double lastBuyingVolume) {
		this.lastBuyingVolume = lastBuyingVolume;
	}

	public String getLastBuyingVolumeDate() {
		return lastBuyingVolumeDate;
	}

	public void setLastBuyingVolumeDate(String lastBuyingVolumeDate) {
		this.lastBuyingVolumeDate = lastBuyingVolumeDate;
	}

	public String getLastDispatchDate() {
		return lastDispatchDate;
	}

	public void setLastDispatchDate(String lastDispatchDate) {
		this.lastDispatchDate = lastDispatchDate;
	}

	public Double getLastHILBuyingVolume() {
		return lastHILBuyingVolume;
	}

	public void setLastHILBuyingVolume(Double lastHILBuyingVolume) {
		this.lastHILBuyingVolume = lastHILBuyingVolume;
	}

	public Double getLastInventory() {
		return lastInventory;
	}

	public void setLastInventory(Double lastInventory) {
		this.lastInventory = lastInventory;
	}

	public String getLastInventoryDate() {
		return lastInventoryDate;
	}

	public void setLastInventoryDate(String lastInventoryDate) {
		this.lastInventoryDate = lastInventoryDate;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getLastPlannedVisitDate() {
		return lastPlannedVisitDate;
	}

	public void setLastPlannedVisitDate(String lastPlannedVisitDate) {
		this.lastPlannedVisitDate = lastPlannedVisitDate;
	}

	public String getLastRewardRedeemed() {
		return lastRewardRedeemed;
	}

	public void setLastRewardRedeemed(String lastRewardRedeemed) {
		this.lastRewardRedeemed = lastRewardRedeemed;
	}

	public Double getLastSellingPrice() {
		return lastSellingPrice;
	}

	public void setLastSellingPrice(Double lastSellingPrice) {
		this.lastSellingPrice = lastSellingPrice;
	}

	public String getLastSellingPriceDate() {
		return lastSellingPriceDate;
	}

	public void setLastSellingPriceDate(String lastSellingPriceDate) {
		this.lastSellingPriceDate = lastSellingPriceDate;
	}

	public String getLatitude() {
		return latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}

	public String getLongitude() {
		return longitude;
	}

	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	public String getMailingAddress() {
		return mailingAddress;
	}

	public void setMailingAddress(String mailingAddress) {
		this.mailingAddress = mailingAddress;
	}

	public String getMaritalStatus() {
		return maritalStatus;
	}

	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	public String getMobile1() {
		return mobile1;
	}

	public void setMobile1(String mobile1) {
		this.mobile1 = mobile1;
	}

	public String getMobile2() {
		return mobile2;
	}

	public void setMobile2(String mobile2) {
		this.mobile2 = mobile2;
	}

	public String getNationalId() {
		return nationalId;
	}

	public void setNationalId(String nationalId) {
		this.nationalId = nationalId;
	}

	public String getNationality() {
		return nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	public String getNextPlannedVisitDate() {
		return nextPlannedVisitDate;
	}

	public void setNextPlannedVisitDate(String nextPlannedVisitDate) {
		this.nextPlannedVisitDate = nextPlannedVisitDate;
	}

	public String getNotFavouriteDrink() {
		return notFavouriteDrink;
	}

	public void setNotFavouriteDrink(String notFavouriteDrink) {
		this.notFavouriteDrink = notFavouriteDrink;
	}

	public String getNotFavouriteFood() {
		return notFavouriteFood;
	}

	public void setNotFavouriteFood(String notFavouriteFood) {
		this.notFavouriteFood = notFavouriteFood;
	}

	public String getNote() {
		return Note;
	}

	public void setNote(String Note) {
		this.Note = Note;
	}

	public String getNumber() {
		return Number;
	}

	public void setNumber(String Number) {
		this.Number = Number;
	}

	public Double getNumberOfPermanentEmployees() {
		return numberOfPermanentEmployees;
	}

	public void setNumberOfPermanentEmployees(Double numberOfPermanentEmployees) {
		this.numberOfPermanentEmployees = numberOfPermanentEmployees;
	}

	public String getOrderDate() {
		return orderDate;
	}

	public void setOrderDate(String orderDate) {
		this.orderDate = orderDate;
	}

	public Double getOrderVolume() {
		return orderVolume;
	}

	public void setOrderVolume(Double orderVolume) {
		this.orderVolume = orderVolume;
	}

	public String getOwnerContactNumber() {
		return ownerContactNumber;
	}

	public void setOwnerContactNumber(String ownerContactNumber) {
		this.ownerContactNumber = ownerContactNumber;
	}

	public String getSupplierName() {
		return supplierName;
	}

	public void setSupplierName(String supplierName) {
		this.supplierName = supplierName;
	}

	public String getPhone1() {
		return phone1;
	}

	public void setPhone1(String phone1) {
		this.phone1 = phone1;
	}

	public String getPhone2() {
		return phone2;
	}

	public void setPhone2(String phone2) {
		this.phone2 = phone2;
	}

	public String getPickUp2TArmada() {
		return pickUp2TArmada;
	}

	public void setPickUp2TArmada(String pickUp2TArmada) {
		this.pickUp2TArmada = pickUp2TArmada;
	}

	public String getPicture() {
		return picture;
	}

	public void setPicture(String picture) {
		this.picture = picture;
	}

	public String getPostalCode() {
		return postalCode;
	}

	public void setPostalCode(String postalCode) {
		this.postalCode = postalCode;
	}

	public String getPreferredName() {
		return preferredName;
	}

	public void setPreferredName(String preferredName) {
		this.preferredName = preferredName;
	}

	public String getPreferredContactMethod() {
		return preferredContactMethod;
	}

	public void setPreferredContactMethod(String preferredContactMethod) {
		this.preferredContactMethod = preferredContactMethod;
	}

	public String getProvince() {
		return province;
	}

	public void setProvince(String province) {
		this.province = province;
	}

	public String getProgram() {
		return program;
	}

	public void setProgram(String program) {
		this.program = program;
	}

	public String getProgramStartDate() {
		return programStartDate;
	}

	public void setProgramStartDate(String programStartDate) {
		this.programStartDate = programStartDate;
	}

	public String getProgramEndDate() {
		return programEndDate;
	}

	public void setProgramEndDate(String programEndDate) {
		this.programEndDate = programEndDate;
	}

	public String getPromotion() {
		return promotion;
	}

	public void setPromotion(String promotion) {
		this.promotion = promotion;
	}

	public String getPromotionStartDate() {
		return promotionStartDate;
	}

	public void setPromotionStartDate(String promotionStartDate) {
		this.promotionStartDate = promotionStartDate;
	}

	public String getPromotionEndDate() {
		return promotionEndDate;
	}

	public void setPromotionEndDate(String promotionEndDate) {
		this.promotionEndDate = promotionEndDate;
	}

	public String getReasonForNotAchievingTarget() {
		return reasonForNotAchievingTarget;
	}

	public void setReasonForNotAchievingTarget(
			String reasonForNotAchievingTarget) {
		this.reasonForNotAchievingTarget = reasonForNotAchievingTarget;
	}

	public String getReligion() {
		return religion;
	}

	public void setReligion(String religion) {
		this.religion = religion;
	}

	public Double getRetailerCreditLimit() {
		return retailerCreditLimit;
	}

	public void setRetailerCreditLimit(Double retailerCreditLimit) {
		this.retailerCreditLimit = retailerCreditLimit;
	}

	public String getRetailerId() {
		return retailerId;
	}

	public void setRetailerId(String retailerId) {
		this.retailerId = retailerId;
	}

	public String getRetailerName() {
		return retailerName;
	}

	public void setRetailerName(String retailerName) {
		this.retailerName = retailerName;
	}

	public String getRetailerStatus() {
		return retailerStatus;
	}

	public void setRetailerStatus(String retailerStatus) {
		this.retailerStatus = retailerStatus;
	}

	public String getRetailerTermOfPayment() {
		return retailerTermOfPayment;
	}

	public void setRetailerTermOfPayment(String retailerTermOfPayment) {
		this.retailerTermOfPayment = retailerTermOfPayment;
	}

	public String getReasonForBuyingFromLeadCompetitor() {
		return ReasonForBuyingFromLeadCompetitor;
	}

	public void setReasonForBuyingFromLeadCompetitor(
			String ReasonForBuyingFromLeadCompetitor) {
		this.ReasonForBuyingFromLeadCompetitor = ReasonForBuyingFromLeadCompetitor;
	}

	public String getReasonForUnsatisfiedExperience() {
		return ReasonForUnsatisfiedExperience;
	}

	public void setReasonForUnsatisfiedExperience(
			String ReasonForUnsatisfiedExperience) {
		this.ReasonForUnsatisfiedExperience = ReasonForUnsatisfiedExperience;
	}

	public String getSsCompetitorName() {
		return ssCompetitorName;
	}

	public void setSsCompetitorName(String ssCompetitorName) {
		this.ssCompetitorName = ssCompetitorName;
	}

	public String getSsPictureDate() {
		return ssPictureDate;
	}

	public void setSsPictureDate(String ssPictureDate) {
		this.ssPictureDate = ssPictureDate;
	}

	public String getSsPictureDescription() {
		return ssPictureDescription;
	}

	public void setSsPictureDescription(String ssPictureDescription) {
		this.ssPictureDescription = ssPictureDescription;
	}

	public String getSsPicture() {
		return ssPicture;
	}

	public void setSsPicture(String ssPicture) {
		this.ssPicture = ssPicture;
	}

	public Double getSalesActualMTD() {
		return salesActualMTD;
	}

	public void setSalesActualMTD(Double salesActualMTD) {
		this.salesActualMTD = salesActualMTD;
	}

	public String getSalesCallNote() {
		return salesCallNote;
	}

	public void setSalesCallNote(String salesCallNote) {
		this.salesCallNote = salesCallNote;
	}

	public String getSalesOfficerId() {
		return salesOfficerId;
	}

	public void setSalesOfficerId(String salesOfficerId) {
		this.salesOfficerId = salesOfficerId;
	}

	public String getSalesOfficer() {
		return salesOfficer;
	}

	public void setSalesOfficer(String salesOfficer) {
		this.salesOfficer = salesOfficer;
	}

	public Double getSalesTargetCurrentMonth() {
		return salesTargetCurrentMonth;
	}

	public void setSalesTargetCurrentMonth(Double salesTargetCurrentMonth) {
		this.salesTargetCurrentMonth = salesTargetCurrentMonth;
	}

	public Double getSalesTargetMTD() {
		return salesTargetMTD;
	}

	public void setSalesTargetMTD(Double salesTargetMTD) {
		this.salesTargetMTD = salesTargetMTD;
	}

	public String getSalesmanInChargeId() {
		return salesmanInChargeId;
	}

	public void setSalesmanInChargeId(String salesmanInChargeId) {
		this.salesmanInChargeId = salesmanInChargeId;
	}

	public String getSalesmanInCharge() {
		return salesmanInCharge;
	}

	public void setSalesmanInCharge(String salesmanInCharge) {
		this.salesmanInCharge = salesmanInCharge;
	}

	public Boolean getSendAlert() {
		return sendAlert;
	}

	public void setSendAlert(Boolean sendAlert) {
		this.sendAlert = sendAlert;
	}

	public String getShopSignRemark() {
		return shopSignRemark;
	}

	public void setShopSignRemark(String shopSignRemark) {
		this.shopSignRemark = shopSignRemark;
	}

	public String getSignBoard() {
		return signBoard;
	}

	public void setSignBoard(String signBoard) {
		this.signBoard = signBoard;
	}

	public Integer getStartingYear() {
		return startingYear;
	}

	public void setStartingYear(Integer startingYear) {
		this.startingYear = startingYear;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getStreetAddress() {
		return streetAddress;
	}

	public void setStreetAddress(String streetAddress) {
		this.streetAddress = streetAddress;
	}

	public Boolean getSubmitted() {
		return submitted;
	}

	public void setSubmitted(Boolean submitted) {
		this.submitted = submitted;
	}

	public String getTierKLABHistory() {
		return tierKLABHistory;
	}

	public void setTierKLABHistory(String tierKLABHistory) {
		this.tierKLABHistory = tierKLABHistory;
	}

	public String getTierKLAB() {
		return tierKLAB;
	}

	public void setTierKLAB(String tierKLAB) {
		this.tierKLAB = tierKLAB;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getTwentyFourTTruckArmada() {
		return twentyFourTTruckArmada;
	}

	public void setTwentyFourTTruckArmada(String twentyFourTTruckArmada) {
		this.twentyFourTTruckArmada = twentyFourTTruckArmada;
	}

	public Double getX1stDesiredRewardPoints() {
		return x1stDesiredRewardPoints;
	}

	public void setX1stDesiredRewardPoints(Double x1stDesiredRewardPoints) {
		this.x1stDesiredRewardPoints = x1stDesiredRewardPoints;
	}

	public String getX1stDesiredReward() {
		return x1stDesiredReward;
	}

	public void setX1stDesiredReward(String x1stDesiredReward) {
		this.x1stDesiredReward = x1stDesiredReward;
	}

	public Double getX2ndDesiredRewardPoints() {
		return x2ndDesiredRewardPoints;
	}

	public void setX2ndDesiredRewardPoints(Double x2ndDesiredRewardPoints) {
		this.x2ndDesiredRewardPoints = x2ndDesiredRewardPoints;
	}

	public String getX2ndDesiredReward() {
		return x2ndDesiredReward;
	}

	public void setX2ndDesiredReward(String x2ndDesiredReward) {
		this.x2ndDesiredReward = x2ndDesiredReward;
	}

	public Double getX3rdDesiredRewardPoints() {
		return x3rdDesiredRewardPoints;
	}

	public void setX3rdDesiredRewardPoints(Double x3rdDesiredRewardPoints) {
		this.x3rdDesiredRewardPoints = x3rdDesiredRewardPoints;
	}

	public String getX3rdDesiredReward() {
		return x3rdDesiredReward;
	}

	public void setX3rdDesiredReward(String x3rdDesiredReward) {
		this.x3rdDesiredReward = x3rdDesiredReward;
	}

	public Boolean getIsProspect() {
		return isProspect;
	}

	public void setIsProspect(Boolean isProspect) {
		this.isProspect = isProspect;
	}

	public String getLandmarkPictureMD5() {
		return landmarkPictureMD5;
	}

	public void setLandmarkPictureMD5(String landmarkPictureMD5) {
		this.landmarkPictureMD5 = landmarkPictureMD5;
	}

	public String getPictureMD5() {
		return pictureMD5;
	}

	public void setPictureMD5(String pictureMD5) {
		this.pictureMD5 = pictureMD5;
	}

	public String getSsPictureMD5() {
		return ssPictureMD5;
	}

	public void setSsPictureMD5(String ssPictureMD5) {
		this.ssPictureMD5 = ssPictureMD5;
	}

	public String getReasonForCancelling() {
		return reasonForCancelling;
	}

	public void setReasonForCancelling(String reasonForCancelling) {
		this.reasonForCancelling = reasonForCancelling;
	}

	public String getUnplannedVisitReason() {
		return unplannedVisitReason;
	}

	public void setUnplannedVisitReason(String unplannedVisitReason) {
		this.unplannedVisitReason = unplannedVisitReason;
	}

	public String getCheckInDateTime() {
		return checkInDateTime;
	}

	public void setCheckInDateTime(String checkInDateTime) {
		this.checkInDateTime = checkInDateTime;
	}

	public Boolean getIsEdited() {
		return isEdited;
	}

	public void setIsEdited(Boolean isEdited) {
		this.isEdited = isEdited;
	}

	public long getProspectId() {
		return prospectId;
	}

	public void setProspectId(long prospectId) {
		this.prospectId = prospectId;
	}

	public long getAccountId() {
		return accountId;
	}

	public void setAccountId(long accountId) {
		this.accountId = accountId;
	}

	/** To-one relationship, resolved on first access. */
	public Prospect getProspect() {
		long __key = this.prospectId;
		if (prospect__resolvedKey == null
				|| !prospect__resolvedKey.equals(__key)) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			ProspectDao targetDao = daoSession.getProspectDao();
			Prospect prospectNew = targetDao.load(__key);
			synchronized (this) {
				prospect = prospectNew;
				prospect__resolvedKey = __key;
			}
		}
		return prospect;
	}

	public void setProspect(Prospect prospect) {
		if (prospect == null) {
			throw new DaoException(
					"To-one property 'prospectId' has not-null constraint; cannot set to-one to null");
		}
		synchronized (this) {
			this.prospect = prospect;
			prospectId = prospect.getId();
			prospect__resolvedKey = prospectId;
		}
	}

	/** To-one relationship, resolved on first access. */
	public Account getAccount() {
		long __key = this.accountId;
		if (account__resolvedKey == null || !account__resolvedKey.equals(__key)) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			AccountDao targetDao = daoSession.getAccountDao();
			Account accountNew = targetDao.load(__key);
			synchronized (this) {
				account = accountNew;
				account__resolvedKey = __key;
			}
		}
		return account;
	}

	public void setAccount(Account account) {
		if (account == null) {
			throw new DaoException(
					"To-one property 'accountId' has not-null constraint; cannot set to-one to null");
		}
		synchronized (this) {
			this.account = account;
			accountId = account.getId();
			account__resolvedKey = accountId;
		}
	}

	/**
	 * To-many relationship, resolved on first access (and after reset). Changes
	 * to to-many relations are not persisted, make changes to the target
	 * entity.
	 */
	public List<PreOrder> getPreOrders() {
		if (preOrders == null) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			PreOrderDao targetDao = daoSession.getPreOrderDao();
			List<PreOrder> preOrdersNew = targetDao
					._querySaleExecution_PreOrders(id);
			synchronized (this) {
				if (preOrders == null) {
					preOrders = preOrdersNew;
				}
			}
		}
		return preOrders;
	}

	/**
	 * Resets a to-many relationship, making the next get call to query for a
	 * fresh result.
	 */
	public synchronized void resetPreOrders() {
		preOrders = null;
	}

	/**
	 * To-many relationship, resolved on first access (and after reset). Changes
	 * to to-many relations are not persisted, make changes to the target
	 * entity.
	 */
	public List<ActionsLog> getActionLogs() {
		if (actionLogs == null) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			ActionsLogDao targetDao = daoSession.getActionsLogDao();
			List<ActionsLog> actionLogsNew = targetDao
					._querySaleExecution_ActionLogs(id);
			synchronized (this) {
				if (actionLogs == null) {
					actionLogs = actionLogsNew;
				}
			}
		}
		return actionLogs;
	}

	/**
	 * Resets a to-many relationship, making the next get call to query for a
	 * fresh result.
	 */
	public synchronized void resetActionLogs() {
		actionLogs = null;
	}

	/**
	 * To-many relationship, resolved on first access (and after reset). Changes
	 * to to-many relations are not persisted, make changes to the target
	 * entity.
	 */
	public List<CompetitorMarketing> getCompetitorMarketings() {
		if (competitorMarketings == null) {
			if (daoSession == null) {
				throw new DaoException("Entity is detached from DAO context");
			}
			CompetitorMarketingDao targetDao = daoSession
					.getCompetitorMarketingDao();
			List<CompetitorMarketing> competitorMarketingsNew = targetDao
					._querySaleExecution_CompetitorMarketings(id);
			synchronized (this) {
				if (competitorMarketings == null) {
					competitorMarketings = competitorMarketingsNew;
				}
			}
		}
		return competitorMarketings;
	}

	/**
	 * Resets a to-many relationship, making the next get call to query for a
	 * fresh result.
	 */
	public synchronized void resetCompetitorMarketings() {
		competitorMarketings = null;
	}

	/**
	 * Convenient call for {@link AbstractDao#delete(Object)}. Entity must
	 * attached to an entity context.
	 */
	public void delete() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.delete(this);
	}

	/**
	 * Convenient call for {@link AbstractDao#update(Object)}. Entity must
	 * attached to an entity context.
	 */
	public void update() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.update(this);
	}

	/**
	 * Convenient call for {@link AbstractDao#refresh(Object)}. Entity must
	 * attached to an entity context.
	 */
	public void refresh() {
		if (myDao == null) {
			throw new DaoException("Entity is detached from DAO context");
		}
		myDao.refresh(this);
	}

	// KEEP METHODS - put your custom methods here

	public String getPictureFileName() {
		return this.getId().toString() + "_"
				+ HolcimConsts.SALE_EXECUTION_PICTURE_FILENAME + ".jpg";
	}

	// SaleEx TempContact Image
	public boolean isContactPictureTempFileExist(Context context)
			throws HolcimException {
		try {
			return AltimetrikFileHandler
					.isFileExist(getTempContactPictureFilePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getTempContactPictureFilePath(Context context)
			throws HolcimException {
		try {
			return HolcimDataSource.getTempMediaDir(context) + File.separator
					+ HolcimConsts.CONTACT_TEMPORAL_FILE_NAME;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getContactSaleExPicturePath(Context context)
			throws HolcimException {
		try {
			return HolcimDataSource.GetSaleExecutionImagePath(context, this,
					HolcimConsts.CONTACTSaleEx_IMAGE_FIELD_NAME);
		} catch (HolcimException e) {
			throw e;
		}
	}

	// -------------------

	// SS Picture
	public boolean isSSPictureTempFileExist(Context context)
			throws HolcimException {
		try {
			return AltimetrikFileHandler
					.isFileExist(getTempSSPictureFilePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getSSPictureFileName() {
		return this.getId().toString() + "_"
				+ HolcimConsts.SALE_EXECUTION_SSPICTURE_FILENAME + ".jpg";
	}

	public String getTempSSPictureFileName(Context context) {
		return HolcimConsts.TEMPORAL_FILE_NAME;
	}

	public String getTempSSPictureFilePath(Context context)
			throws HolcimException {
		try {
			return HolcimDataSource.getTempMediaDir(context) + File.separator
					+ HolcimConsts.TEMPORAL_FILE_NAME;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean needDownloadSSPicture(Context context)
			throws HolcimException {
		try {
			if (this.getSsPictureMD5() != null
					&& !this.getSsPictureMD5().equals("")) {
				if (!isSSPictureFileExist(context)
						|| !checkSSPicturMD5(context)) {
					return true;
				}
			}
			return false;
		} catch (Exception e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		}
	}

	public boolean needUploadSSPicture(Context context) throws HolcimException {
		try {
			if ((this.getSalesforceId() == null || this.getSalesforceId()
					.equals("")) && isSSPictureFileExist(context)) {
				return true;
			} else if (this.getIsEdited() && isSSPictureFileExist(context)
					&& !checkSSPicturMD5(context)) {
				return true;
			}
			return false;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getSSPicturePath(Context context) throws HolcimException {
		try {
			return HolcimDataSource.GetSaleExecutionImagePath(context, this,
					HolcimConsts.SALE_EXECUTION_SF_SS_IMAGE_FIELD_NAME);
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean isSSPictureFileExist(Context context) throws HolcimException {
		try {
			return AltimetrikFileHandler.isFileExist(getSSPicturePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean checkSSPicturMD5(Context context) throws HolcimException {
		try {
			AltimetrikFileHandler fileHandler = new AltimetrikFileHandler(
					context);
			return fileHandler.GetChecksum(getSSPicturePath(context)).equals(
					this.getSsPictureMD5());
		} catch (AltimetrikException e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		} catch (HolcimException e) {
			throw e;
		}
	}

	// --------------------

	// Landmark Picture
	public String getTempLandmarkPictureFileName(Context context) {
		return HolcimConsts.LANDMARK_TEMPORAL_FILE_NAME;
	}

	public String getTempLandmarkPictureFilePath(Context context)
			throws HolcimException {
		try {
			return HolcimDataSource.getTempMediaDirLandmark(context)
					+ File.separator + HolcimConsts.LANDMARK_TEMPORAL_FILE_NAME;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean isLandmarkPictureTempFileExist(Context context)
			throws HolcimException {
		try {
			return AltimetrikFileHandler
					.isFileExist(getTempLandmarkPictureFilePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getLandmarkPictureFileName() {
		return this.getId() + "_"
				+ HolcimConsts.SALE_EXECUTION__LANDMARK_PICTURE_FILENAME
				+ ".jpg";
	}

	public boolean needDownloadLandmarkPicture(Context context)
			throws HolcimException {
		try {
			if (this.getLandmarkPictureMD5() != null
					&& !this.getLandmarkPictureMD5().equals("")) {
				if (!isLandmarkPictureFileExist(context)
						|| !checkLandmarkPicturMD5(context)) {
					return true;
				}
			}
			return false;
		} catch (Exception e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		}
	}

	public boolean needUploadLandmarkPicture(Context context)
			throws HolcimException {
		try {
			if ((this.getSalesforceId() == null || this.getSalesforceId()
					.equals("")) && isLandmarkPictureFileExist(context)) {
				return true;
			} else if (this.getIsEdited()
					&& isLandmarkPictureFileExist(context)
					&& !checkLandmarkPicturMD5(context)) {
				return true;
			}
			return false;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean needToUploadMedia(Context context) throws HolcimException {
		try {
			return needUploadLandmarkPicture(context)
					|| needUploadPicture(context)
					|| needUploadSSPicture(context);
		} catch (HolcimException e) {
			throw e;
		}
	}

	public String getLandmarkPicturePath(Context context)
			throws HolcimException {
		try {
			return HolcimDataSource.GetSaleExecutionImagePath(context, this,
					HolcimConsts.SALE_EXECUTION_SF_LANDMARK_IMAGE_FIELD_NAME);
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean isLandmarkPictureFileExist(Context context)
			throws HolcimException {
		try {
			return AltimetrikFileHandler
					.isFileExist(getLandmarkPicturePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean checkLandmarkPicturMD5(Context context)
			throws HolcimException {
		try {
			AltimetrikFileHandler fileHandler = new AltimetrikFileHandler(
					context);
			return fileHandler.GetChecksum(getLandmarkPicturePath(context))
					.equals(this.getLandmarkPictureMD5());
		} catch (AltimetrikException e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		} catch (HolcimException e) {
			throw e;
		}
	}

	// Picture
	public String getImagePath(Context context, String field)
			throws HolcimException {
		try {
			if (field
					.equals(HolcimConsts.SALE_EXECUTION_SF_LANDMARK_IMAGE_FIELD_NAME)) {
				return getLandmarkPicturePath(context);
			} else if (field
					.equals(HolcimConsts.SALE_EXECUTION_SF_SS_IMAGE_FIELD_NAME)) {
				return getSSPicturePath(context);
			}
			return getPicturePath(context);
		} catch (HolcimException e) {
			throw e;
		}

	}

	public boolean needUploadPicture(Context context) throws HolcimException {
		try {
			if ((this.getSalesforceId() == null || this.getSalesforceId()
					.equals("")) && isPictureFileExist(context)) {
				return true;
			} else if (this.getIsEdited() && isPictureFileExist(context)
					&& !checkPicturMD5(context)) {
				return true;
			}
			return false;
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean needDownloadPicture(Context context) throws HolcimException {
		try {
			if (this.getPictureMD5() != null
					&& !this.getPictureMD5().equals("")) {
				if (!isPictureFileExist(context) || !checkPicturMD5(context)) {
					return true;
				}
			}
			return false;
		} catch (Exception e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		}
	}

	public String getPicturePath(Context context) throws HolcimException {
		try {
			return HolcimDataSource.GetSaleExecutionImagePath(context, this,
					HolcimConsts.SALE_EXECUTION_SF_PICTURE_IMAGE_FIELD_NAME);
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean isPictureFileExist(Context context) throws HolcimException {
		try {
			return AltimetrikFileHandler.isFileExist(getPicturePath(context));
		} catch (HolcimException e) {
			throw e;
		}
	}

	public boolean checkPicturMD5(Context context) throws HolcimException {
		try {
			AltimetrikFileHandler fileHandler = new AltimetrikFileHandler(
					context);
			return fileHandler.GetChecksum(getPicturePath(context)).equals(
					this.getPictureMD5());
		} catch (AltimetrikException e) {
			throw new HolcimException(HolcimException.FILE_EXCEPTION,
					new HolcimError(HolcimConsts.FILE_ERROR_STATUS,
							e.getMessage()));
		} catch (HolcimException e) {
			throw e;
		}
	}

	// -----------------------
	public void setCompetitorMarketings(
			ArrayList<CompetitorMarketing> competitorMarketings) {
		this.competitorMarketings = competitorMarketings;
	}

	public void setActionLogs(ArrayList<ActionsLog> actionLogs) {
		this.actionLogs = actionLogs;
	}

	public void setPreOrders(ArrayList<PreOrder> preOrders) {
		this.preOrders = preOrders;
	}

	public void removeAllExistingReferences() {
		if (this.getCompetitorMarketings() != null) {
			for (CompetitorMarketing compMark : this.getCompetitorMarketings()) {
				HolcimApp.daoSession.delete(compMark);
			}
		}
		if (this.getActionLogs() != null) {
			for (ActionsLog actionLog : this.getActionLogs()) {
				HolcimApp.daoSession.delete(actionLog);
			}
		}
		if (this.getPreOrders() != null) {
			for (PreOrder preOrder : this.getPreOrders()) {
				HolcimApp.daoSession.delete(preOrder);
			}
		}
	}

	public JSONObject toJSON() throws HolcimException {
		try {
			JSONObject jsonObj = new JSONObject();
			jsonObj.putOpt("salesforceId", this.salesforceId);
			jsonObj.putOpt("visitDate", this.visitDate);
			jsonObj.putOpt("inspectionDate", this.inspectionDate);
			jsonObj.putOpt("availabilityOfHILShopSign",
					this.availabilityOfHILShopSign);
			jsonObj.putOpt("visibilityOfHILShopSign",
					this.visibilityOfHILShopSign);
			jsonObj.putOpt("conditionOfShopSign", this.conditionOfShopSign);
			jsonObj.putOpt("colorCondition", this.colorCondition);
			jsonObj.putOpt("shopSign", this.shopSign);
			jsonObj.putOpt("priority", this.priority);
			jsonObj.putOpt("visibilityOfCompetitorShopSign",
					this.visibilityOfCompetitorShopSign);
			jsonObj.putOpt("typeOfShopSign", this.typeOfShopSign);
			jsonObj.putOpt("cleanessCondition", this.cleanessCondition);
			jsonObj.putOpt("action", this.action);
			jsonObj.putOpt("actionStatus", this.actionStatus);
			jsonObj.putOpt("academicTitle", this.academicTitle);
			jsonObj.putOpt("actualVisitDate", this.actualVisitDate);
			jsonObj.putOpt("bankAccountBranch1", this.bankAccountBranch1);
			jsonObj.putOpt("bankAccountBranch2", this.bankAccountBranch2);
			jsonObj.putOpt("bankAccountBranch3", this.bankAccountBranch3);
			jsonObj.putOpt("bankAccountName1", this.bankAccountName1);
			jsonObj.putOpt("bankAccountName2", this.bankAccountName2);
			jsonObj.putOpt("bankAccountName3", this.bankAccountName3);
			jsonObj.putOpt("bankAccountNumber1", this.bankAccountNumber1);
			jsonObj.putOpt("bankAccountNumber2", this.bankAccountNumber2);
			jsonObj.putOpt("bankAccountNumber3", this.bankAccountNumber3);
			jsonObj.putOpt("birthDate", this.birthDate);
			jsonObj.putOpt("bussinessEntityStatus", this.businessEntityStatus);
			jsonObj.putOpt("buyCompetitorName", this.buyCompetitorName);
			jsonObj.putOpt("callNote", this.callNote);
			jsonObj.putOpt("capacityCurrentMonth", this.capacityCurrentMonth);
			jsonObj.putOpt("comments", this.comments);
			jsonObj.putOpt("companyName", this.companyName);
			// jsonObj.putOpt("competitorBuyingPrice",
			// this.competitorBuyingPrice);
			// jsonObj.putOpt("competitorBuyingPriceDate",
			// this.competitorBuyingPriceDate);
			// jsonObj.putOpt("competitorBuyingVolume",
			// this.competitorBuyingVolume);
			// jsonObj.putOpt("competitorBuyingVolumeDate",
			// this.competitorBuyingVolumeDate);
			// jsonObj.putOpt("competitorInventoryPrice",
			// this.competitorInventoryPrice);
			// jsonObj.putOpt("competitorInventoryPriceDate",
			// this.competitorInventoryPriceDate);
			// jsonObj.putOpt("competitorSellingPrice",
			// this.competitorSellingPrice);
			// jsonObj.putOpt("competitorSellingPriceDate",
			// this.competitorSellingPriceDate);
			jsonObj.putOpt("completed", this.completed);
			jsonObj.putOpt("contactId", this.contactId);
			jsonObj.putOpt("ownerContactNumber", this.ownerContactNumber);
			jsonObj.putOpt("contactMobile1", this.contactMobile1);
			jsonObj.putOpt("contactMobile2", this.contactMobile2);
			jsonObj.putOpt("contactEmail1", this.contactEmail1);
			jsonObj.putOpt("contactName", this.contactName);
			jsonObj.putOpt("accountName", this.accountName);
			jsonObj.putOpt("accountType", this.accountType);
			jsonObj.putOpt("customerClass", this.customerClass);
			jsonObj.putOpt("deliveryRemark", this.deliveryRemark);
			jsonObj.putOpt("district", this.district);
			jsonObj.putOpt("eightTTruckArmada", this.eightTTruckArmada);
			jsonObj.putOpt("email1", this.email1);
			jsonObj.putOpt("event", this.event);
			jsonObj.putOpt("extension1", this.extension1);
			jsonObj.putOpt("experienceLeadCompetitor",
					this.ExperienceWithLeadCompetitor);
			jsonObj.putOpt("favouriteActivities", this.favouriteActivities);
			jsonObj.putOpt("favouriteDrink", this.favouriteDrink);
			jsonObj.putOpt("favouriteFood", this.favouriteFood);
			jsonObj.putOpt("favouriteSports", this.favouriteSports);
			jsonObj.putOpt("fax1", this.fax1);
			jsonObj.putOpt("firstName", this.firstName);
			jsonObj.putOpt("gender", this.gender);
			jsonObj.putOpt("hilBuyingInventoryPrice",
					this.hilBuyingInventoryPrice);
			jsonObj.putOpt("hilBuyingInventoryPriceDate",
					this.hilBuyingInventoryPriceDate);
			jsonObj.putOpt("hilBuyingPrice", this.hilBuyingPrice);
			jsonObj.putOpt("hilBuyingPriceDate", this.hilBuyingPriceDate);
			jsonObj.putOpt("hilBuyingSellingPrice", this.hilBuyingSellingPrice);
			jsonObj.putOpt("hilBuyingSellingPriceDate",
					this.hilBuyingSellingPriceDate);
			jsonObj.putOpt("hilBuyingVolume", this.hilBuyingVolume);
			jsonObj.putOpt("hilBuyingVolumeDate", this.hilBuyingVolumeDate);
			jsonObj.putOpt("hilSoWCurrentMonth", this.hilSoWCurrentMonth);
			jsonObj.putOpt("hmhilBuyingPrice", this.hmhilBuyingPrice);
			jsonObj.putOpt("hmhilInventory", this.hmhilInventory);
			jsonObj.putOpt("hmhilSellingPrice", this.hmhilSellingPrice);
			jsonObj.putOpt("hvlStockStatus", this.hvlStockStatus);
			jsonObj.putOpt("hvlStockVolumeTonMonth",
					this.hvlStockVolumeTonMonth);
			jsonObj.putOpt("hobbies", this.hobbies);
			jsonObj.putOpt("holcimeterBalance", this.holcimeterBalance);
			jsonObj.putOpt("holcimeterBonus", this.holcimeterBonus);
			jsonObj.putOpt("holcimeterTotal", this.holcimeterTotal);
			jsonObj.putOpt("invCompetitorName", this.invCompetitorName);
			jsonObj.putOpt("isDSR", this.isDSR);
			jsonObj.putOpt("jelajahHolcimMembership",
					this.jelajahHolcimMembership);
			jsonObj.putOpt("jobTitle", this.jobTitle);
			jsonObj.putOpt("kecamatan", this.kecamatan);
			jsonObj.putOpt("kelurahan", this.kelurahan);
			jsonObj.putOpt("kota", this.kota);
			jsonObj.putOpt("keyRetailer", this.keyRetailer);
			jsonObj.putOpt("landmarkDescription", this.landmarkDescription);
			jsonObj.putOpt("landmarkPicture", this.landmarkPicture);
			jsonObj.putOpt("landmarkPictureMD5", this.landmarkPictureMD5);
			jsonObj.putOpt("landStatus", this.landStatus);
			// jsonObj.putOpt("lastActualVisitDate", this.lastActualVisitDate);
			// TODO: descomentar
			jsonObj.putOpt("lastDispatchDate", this.lastDispatchDate);
			jsonObj.putOpt("lastHILBuyingVolume", this.lastHILBuyingVolume);
			jsonObj.putOpt("lastName", this.lastName);
			jsonObj.putOpt("lastPlannedVisitDate", this.lastPlannedVisitDate);
			jsonObj.putOpt("lastRewardRedeemed", this.lastRewardRedeemed);
			jsonObj.putOpt("latitude", this.latitude);
			jsonObj.putOpt("longitude", this.longitude);
			jsonObj.putOpt("mailingAddress", this.mailingAddress);
			jsonObj.putOpt("maritalStatus", this.maritalStatus);
			jsonObj.putOpt("mobile1", this.mobile1);
			jsonObj.putOpt("mobile2", this.mobile2);
			jsonObj.putOpt("nationalId", this.nationalId);
			jsonObj.putOpt("nationality", this.nationality);
			jsonObj.putOpt("notFavouriteDrink", this.notFavouriteDrink);
			jsonObj.putOpt("notFavouriteFood", this.notFavouriteFood);
			jsonObj.putOpt("numberOfPermanentEmployees",
					this.numberOfPermanentEmployees);
			jsonObj.putOpt("Note", this.Note);
			jsonObj.putOpt("Number", this.Number);
			jsonObj.putOpt("orderDate", this.orderDate);
			jsonObj.putOpt("orderVolume", this.orderVolume);
			jsonObj.putOpt("phone1", this.phone1);
			jsonObj.putOpt("phone2", this.phone2);
			jsonObj.putOpt("physicalCondition", this.physicalCondition);
			jsonObj.putOpt("pickUp2TArmada", this.pickUp2TArmada);
			jsonObj.putOpt("pictureMD5", this.pictureMD5);
			jsonObj.putOpt("postalCode", this.postalCode);
			jsonObj.putOpt("preferredContactMethod",
					this.preferredContactMethod);
			jsonObj.putOpt("preferredName", this.preferredName);
			jsonObj.putOpt("province", this.province);
			jsonObj.putOpt("reasonForNotAchievingTarget",
					this.reasonForNotAchievingTarget);
			jsonObj.putOpt("religion", this.religion);
			jsonObj.putOpt("retailerCreditLimit", this.retailerCreditLimit);
			jsonObj.putOpt("retailerId", this.retailerId);
			jsonObj.putOpt("retailerStatus", this.retailerStatus);
			jsonObj.putOpt("retailerTermOfPayment", this.retailerTermOfPayment);
			jsonObj.putOpt("reasonBuyingLeadCompetitor",
					this.ReasonForBuyingFromLeadCompetitor);
			jsonObj.putOpt("reasonUnsatisfiedExperience",
					this.ReasonForUnsatisfiedExperience);
			jsonObj.putOpt("salesActualMTD", this.salesActualMTD);
			jsonObj.putOpt("salesCallNote", this.salesCallNote);
			jsonObj.putOpt("salesmanInCharge", this.salesmanInCharge);
			jsonObj.putOpt("salesmanInChargeId", this.salesmanInChargeId);
			jsonObj.putOpt("salesOfficer", this.salesOfficer);
			jsonObj.putOpt("salesOfficerId", this.salesOfficerId);
			jsonObj.putOpt("salesTargetCurrentMonth",
					this.salesTargetCurrentMonth);
			jsonObj.putOpt("salesTargetMTD", this.salesTargetMTD);
			jsonObj.putOpt("sendAlert", this.sendAlert);
			jsonObj.putOpt("shopSignRemark", this.shopSignRemark);
			jsonObj.putOpt("signBoard", this.signBoard);
			jsonObj.putOpt("ssCompetitorName", this.ssCompetitorName);
			jsonObj.putOpt("ssPictureDate", this.ssPictureDate);
			jsonObj.putOpt("ssPictureDescription", this.ssPictureDescription);
			jsonObj.putOpt("ssPictureMD5", this.ssPictureMD5);
			jsonObj.putOpt("startingYear", this.startingYear);
			jsonObj.putOpt("status", this.status);
			jsonObj.putOpt("streetAddress", this.streetAddress);
			jsonObj.putOpt("submitted", this.submitted);
			jsonObj.putOpt("tierKLAB", this.tierKLAB);
			jsonObj.putOpt("tierKLABHistory", this.tierKLABHistory);
			jsonObj.putOpt("title", this.title);
			jsonObj.putOpt("twentyFourTTruckArmada",
					this.twentyFourTTruckArmada);
			jsonObj.putOpt("x1stDesiredReward", this.x1stDesiredReward);
			jsonObj.putOpt("x1stDesiredRewardPoints",
					this.x1stDesiredRewardPoints);
			jsonObj.putOpt("x2ndDesiredReward", this.x2ndDesiredReward);
			jsonObj.putOpt("x2ndDesiredRewardPoints",
					this.x2ndDesiredRewardPoints);
			jsonObj.putOpt("x3rdDesiredReward", this.x3rdDesiredReward);
			jsonObj.putOpt("x3rdDesiredRewardPoints",
					this.x3rdDesiredRewardPoints);
			jsonObj.putOpt("visibilityOfCompetitorShopSign",
					this.visibilityOfCompetitorShopSign);
			jsonObj.putOpt("visibilityOfHILShopSign",
					this.visibilityOfHILShopSign);
			jsonObj.putOpt("isProspect", this.isProspect);
			jsonObj.putOpt("unplannedVisitReason", this.unplannedVisitReason);
			jsonObj.putOpt("reasonForCancelling", this.reasonForCancelling);
			jsonObj.putOpt("checkInDateTime", this.checkInDateTime);
			if (this.getProspect() != null) {
				jsonObj.putOpt("prospectID", this.getProspect()
						.getSalesforceId());
			}
			if (this.getAccount() != null) {
				jsonObj.putOpt("AccountID", this.getAccount().getSalesforceId());
			}

			return jsonObj;
		} catch (JSONException e) {
			throw new HolcimException(HolcimException.PARSE_EXCEPTION,
					HolcimConsts.ERROR_PARSING_JSON_STATUS, e.getMessage());
		}
	}

	public Class<?> getAccPrspType() throws Exception {
		if (this.getAccount() != null) {
			return Account.class;
		} else if (this.getProspect() != null) {
			return Prospect.class;
		} else {
			throw new Exception("No type for this SaleExecution");
		}
	}

	public Object getSEType() throws Exception {
		if (this.getAccount() != null) {
			return this.getAccount();
		} else if (this.getProspect() != null) {
			return this.getProspect();
		} else {
			throw new Exception("No type for this SaleExecution");
		}
	}

	public String getSEName() throws Exception {
		if (this.getAccount() != null) {
			return this.getAccount().getName();
		} else if (this.getProspect() != null) {
			return this.getProspect().getName();
		} else {
			throw new Exception("No type for this SaleExecution");
		}
	}
	// KEEP METHODS END

}
